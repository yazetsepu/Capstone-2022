// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPIPostgresSqlCSS.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinimalAPIPostgresSqlCSS.Migrations
{
    [DbContext(typeof(CSSDb))]
    [Migration("20221120211318_migrationtest1")]
    partial class migrationtest1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Admins", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Admin_Email")
                        .HasColumnType("text");

                    b.Property<string>("Admin_Password")
                        .HasColumnType("text");

                    b.HasKey("User_Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Commands", b =>
                {
                    b.Property<int>("Command_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Command_Id"));

                    b.Property<int?>("AdminsUser_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Command_performed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Command_read")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Command_received")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Command_string")
                        .HasColumnType("text");

                    b.Property<string>("Command_value")
                        .HasColumnType("text");

                    b.Property<int?>("Duplicate_flag")
                        .HasColumnType("integer");

                    b.Property<int?>("Logid")
                        .HasColumnType("integer");

                    b.Property<int?>("LogsLog_id")
                        .HasColumnType("integer");

                    b.HasKey("Command_Id");

                    b.HasIndex("AdminsUser_Id");

                    b.HasIndex("LogsLog_id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.EnvironmentalData", b =>
                {
                    b.Property<int>("Entry_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Entry_Id"));

                    b.Property<float?>("Humidity")
                        .HasColumnType("real");

                    b.Property<float?>("Light")
                        .HasColumnType("real");

                    b.Property<int?>("PicturesId")
                        .HasColumnType("integer");

                    b.Property<string>("Reservoir_water_level")
                        .HasColumnType("text");

                    b.Property<float?>("Soil_moisture")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_2")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_3")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_4")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_5")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_6")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_7")
                        .HasColumnType("real");

                    b.Property<float?>("Soil_moisture_8")
                        .HasColumnType("real");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.Property<DateTime>("Times_tamps")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float?>("Water_level")
                        .HasColumnType("real");

                    b.HasKey("Entry_Id");

                    b.HasIndex("PicturesId");

                    b.ToTable("EnvironmentalData");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Logs", b =>
                {
                    b.Property<int>("Log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Log_id"));

                    b.Property<string>("Log_text")
                        .HasColumnType("text");

                    b.Property<DateTime>("Times_tamps")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Log_id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Pictures", b =>
                {
                    b.Property<int>("Pic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pic_Id"));

                    b.Property<string>("Camera_Pic_Path_1")
                        .HasColumnType("text");

                    b.Property<string>("Camera_Pic_Path_2")
                        .HasColumnType("text");

                    b.Property<string>("Camera_Pic_Path_3")
                        .HasColumnType("text");

                    b.Property<string>("Camera_Pic_Path_4")
                        .HasColumnType("text");

                    b.Property<float?>("Classification_accurracy")
                        .HasColumnType("real");

                    b.Property<float?>("Classification_accurracy_2")
                        .HasColumnType("real");

                    b.Property<float?>("Classification_accurracy_3")
                        .HasColumnType("real");

                    b.Property<float?>("Classification_accurracy_4")
                        .HasColumnType("real");

                    b.Property<int?>("Classification_id")
                        .HasColumnType("integer");

                    b.Property<int?>("Classification_id_2")
                        .HasColumnType("integer");

                    b.Property<int?>("Classification_id_3")
                        .HasColumnType("integer");

                    b.Property<int?>("Classification_id_4")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Times_tamps")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Pic_Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Commands", b =>
                {
                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Admins", "Admins")
                        .WithMany("Commands")
                        .HasForeignKey("AdminsUser_Id");

                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Logs", "Logs")
                        .WithMany()
                        .HasForeignKey("LogsLog_id");

                    b.Navigation("Admins");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.EnvironmentalData", b =>
                {
                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Pictures", "Pictures")
                        .WithMany()
                        .HasForeignKey("PicturesId");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Admins", b =>
                {
                    b.Navigation("Commands");
                });
#pragma warning restore 612, 618
        }
    }
}
