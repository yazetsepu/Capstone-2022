// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPIPostgresSqlCSS.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinimalAPIPostgresSqlCSS.Migrations
{
    [DbContext(typeof(CSSDb))]
    [Migration("20221101113219_migrationtest")]
    partial class migrationtest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Admins", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Admin_Email")
                        .HasColumnType("text");

                    b.Property<string>("Admin_Password")
                        .HasColumnType("text");

                    b.HasKey("User_Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Commands", b =>
                {
                    b.Property<int>("Command_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Command_Id"));

                    b.Property<int?>("AdminsUser_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Command_performed")
                        .HasColumnType("text");

                    b.Property<string>("Command_read")
                        .HasColumnType("text");

                    b.Property<string>("Command_received")
                        .HasColumnType("text");

                    b.Property<string>("Command_string")
                        .HasColumnType("text");

                    b.Property<string>("Command_value")
                        .HasColumnType("text");

                    b.Property<int?>("Duplicate_flag")
                        .HasColumnType("integer");

                    b.Property<int>("Logid")
                        .HasColumnType("integer");

                    b.Property<int?>("LogsLog_id")
                        .HasColumnType("integer");

                    b.HasKey("Command_Id");

                    b.HasIndex("AdminsUser_Id");

                    b.HasIndex("LogsLog_id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.EnvironmentalData", b =>
                {
                    b.Property<int?>("Entry_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Entry_Id"));

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<int?>("PicturesId")
                        .HasColumnType("integer");

                    b.Property<float?>("Soil_moisture")
                        .HasColumnType("real");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.Property<string>("Times_tamps")
                        .HasColumnType("text");

                    b.Property<float?>("Water_level")
                        .HasColumnType("real");

                    b.HasKey("Entry_Id");

                    b.HasIndex("PicturesId")
                        .IsUnique();

                    b.ToTable("EnvironmentalData");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Logs", b =>
                {
                    b.Property<int>("Log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Log_id"));

                    b.Property<string>("Log_text")
                        .HasColumnType("text");

                    b.Property<string>("Times_tamps")
                        .HasColumnType("text");

                    b.HasKey("Log_id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Pictures", b =>
                {
                    b.Property<int>("Pic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pic_Id"));

                    b.Property<float>("Classification_accurracy")
                        .HasColumnType("real");

                    b.Property<int>("Classification_id")
                        .HasColumnType("integer");

                    b.Property<string>("Clock")
                        .HasColumnType("text");

                    b.Property<string>("Pic_Path")
                        .HasColumnType("text");

                    b.HasKey("Pic_Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Commands", b =>
                {
                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Admins", null)
                        .WithMany("Commands")
                        .HasForeignKey("AdminsUser_Id");

                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Logs", "Logs")
                        .WithMany()
                        .HasForeignKey("LogsLog_id");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.EnvironmentalData", b =>
                {
                    b.HasOne("MinimalAPIPostgresSqlCSS.Models.Pictures", "Pictures")
                        .WithOne("EnvironmentalData")
                        .HasForeignKey("MinimalAPIPostgresSqlCSS.Models.EnvironmentalData", "PicturesId");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Admins", b =>
                {
                    b.Navigation("Commands");
                });

            modelBuilder.Entity("MinimalAPIPostgresSqlCSS.Models.Pictures", b =>
                {
                    b.Navigation("EnvironmentalData");
                });
#pragma warning restore 612, 618
        }
    }
}
